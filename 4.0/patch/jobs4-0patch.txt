@pemit %#=[ansi(hc,ANOMALY JOBS:)] Working. Please wait.
@@ ===============================================================================
@@ 
@@ Anomaly Jobs
@@ Superior Task Tracking Technology
@@ Version 4.0 PATCH from Version 3.2 17Feb2003
@@
@@ Written by: Starfleet @ Anomaly (station419@earthlink.net)
@@
@@ Platforms supported: MUX 2.x, MUSH 3
@@
@@ This code is provided as-is and expresses no guarantee or warranty. Use it
@@ entirely at your own risk. Author is not liable for any damages, real or
@@ implied. It is available free to benefit the online text game community at
@@ large.
@@
@@ ===============================================================================
@@ Installation instructions
@@ 
@@ This patch REQUIRES Anomaly Jobs 3.2. If you do not have 3.2 installed, this
@@ version will not work. Please get the jobs-v4-0.txt file and quote that for
@@ a fresh installation. If you are running an earlier version, please patch up to
@@ 3.2, then run the 4.0 patch. For versions earlier than 2.3, please contact the
@@ author.
@@ 
@@ It requires no unformatting or alteration of any kind. Simply quote it into 
@@ your favorite client, and it will tidy everything up on its own.
@@
@@ Note that there are new commands. Please make sure you are using the most
@@ recent version of the help file, found in the zip file.
@@
@@ What's new?
@@
@@ Searching- search through jobs for text strings/authors.
@@ Editing - edit CRE and ADD entries for mistakes. Edits are tracked.
@@ Job Locking - lock down jobs from modification.
@@ Job Cloning - Copy a job into a new one.
@@ Bucket post behavior - change how /complete behaves on each bucket.
@@ 
@@ The internals have been reworked sufficiently on all commands to warrant a
@@ full tick on the version number. This 'patch' is almost a full new install.
@@
@@ ===============================================================================
@@
@set me=quiet
@fo me={@tel [search(object=Job Global Object <JGO>)]}
@pemit %#=[repeat(=,79)]%r%r[center(ansi(hc,Patching Anomaly Jobs to 4.0),79)]%r%r[repeat(=,79)]
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting up commands.
@@
&CMD_JOB/CREATE here=$+job/create */*=*:@switch [u(#1430/CREATE_ACCESS,%#)][u(#1430/FN_ACCESSCHECK,ucstr(secure(%0)),%#)][member(get(#1430/BUCKETS),[ucstr(%0)])]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=You cannot access that bucket.},110*,{@pemit %#=There is no bucket by that name. Valid buckets are: [u(#1430/FN_PRETTY,get(#1430/BUCKETS))].},{@pemit [setq(0,inc(get(#1430/JOBS_NUM)))]%#=You have created job number %q0 entitled '[strtrunc(%1,30)]'.;@trigger #1430/TRIG_CREATE=%#,[ucstr(%0)],1,[strtrunc(%1,30)],[strtrunc(%2,u(#1430/BUFFER))],,[ifelse(u(#1430/CONFIG_ASSIGN),%#,)]}
&CMD_JOB/ADD here=$+job/add *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=Comments to job number %0 added.;@trigger #1430/TRIG_ADD=%q0,%1,%#,ADD;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Comments added to job %0 by %n.}
&CMD_JOBS here=$+jobs:@wait me=@switch [u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.;@wait 0=@notify me},{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist revwords(lcon(#1430))={@pemit %#=[ifelse(u(#1430/FN_MONITORCHECK,get(##/BUCKET),%#),[u(#1430/DISPLAY_JOB,##)],)]};@wait .1=@pemit %#=[center(| [ansi(hr,*)] Denotes New Activity |,79,=)];@wait 0=@notify me}
&CMD_JOB/VIEW here=$+job *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(#1430/DISPLAY_HEADERS,%q0)];@dolist [filter(#1430/FIL_COMMENTS,lattr(%q0/COMMENT_*))]={@pemit %#=[repeat(-,79)]%r[ifelse(u(#1430/EDIT_ACCESS,%#),[ansi(h,%[)][ansi(ch,last(##,_))][ansi(h,%]%b)],)][ansi(h,[extract(get(%q0/##),4,1,|)] added on [convsecs(extract(get(%q0/##),2,1,|))]:)] [last(get(%q0/##),|)]};@wait me={@pemit %#=[repeat(=,79)]};@notify me}
&CMD_JOB/ESC here=$+job/esc *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][setq(1,match(green yellow red,%1*))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][gt(%q1,0)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That is not a valid escalation code. Valid codes are red, yellow, and green.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have escalated job # %0 to [ucstr(%1)] status.;&PRIORITY %q0=%q1;@trigger #1430/TRIG_ADD=%q0,Priority To [ucstr(%1)].,%#,ESC;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],Job %0 set to [ucstr(%1)] priority by %n.}
&CMD_JOB/ASSIGN here=$+job/assign *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(1,num(*%1))][setq(2,switch(ucstr(%1),NONE,1,0))][or(isdbref(%q1),%q2)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=That is not a valid job number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have assigned Job number %0 to [name(%q1)].;&ASSIGNED_TO %q0=[ifelse(%q2,,%q1)];@trigger #1430/TRIG_ADD=%q0,[ifelse(%q2,Assignment removed.,Assigned to [name(%q1)])].,%#,ASN;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 has been assigned to [ifelse(%q2,nobody,name(%q1))] by %n.}
&CMD_JOB/APPROVE here=$+job/approve *=*:@switch [setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/HAS_ACCESS,%#)][u(#1430/APPROVE_ACCESS,%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=There is no job by that number.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have approved job #%0, adding the comments: %1;@trigger #895/TRIG_APPROVE=%0,%#,%1,[get(%q0/TITLE)];@nuke %q0;&BUCKET %q0=GOING}
&CMD_JOB/DENY here=$+job/deny *=*:@switch [or(u(#1430/DENY_ACCESS,%#),orflags(%#,WZ))][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You cannot access that job.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have denied job #%0.;@trigger #895/TRIG_DENY=%0,%#,%1,[get(%q0/TITLE)];@nuke %q0;&BUCKET %q0=GOING}
&CMD_JOB/COMPLETE here=$+job/complete *=*:@switch [u(#1430/COMPLETE_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job #. See '+jobs/all' for valid jobs.},110*,{@pemit %#=Permission denied.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have completed job # %0.;@trigger #895/TRIG_COMPLETE=%0,%#,%1,[get(%q0/BUCKET)];@wait me={@nuke %q0;&BUCKET %q0=GOING};@notify me}
&CMD_JOB/DUE here=$+job/due *=*:@switch [not(eq(words(%1,/),3))][u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][switch(lcstr(%1),none,2,switch(ifelse(eq(words(%1),4),convtime(XXX %1),convtime(%1)),-1,0,1))]=0*,{@@},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=That is not a valid job number.},1110*,{@pemit %#=You do not have access to that job.},11110*,{@pemit %#=Invalid date. Use date formatting as '[rest(time())]'.},11112*,{@pemit %#=You have cleared Job Number %0's date.;&DUE_ON %q0=;@trigger #1430/TRIG_ADD=%q0,Due date cleared.,%#,DUE;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],Due date cleared by %n for job [secure(%0)].},{@pemit %#=You have set Job Number %0's date to %1.;&DUE_ON %q0=[ifelse(eq(words(%1),4),convtime(XXX %1),convtime(%1))];@trigger #1430/TRIG_ADD=%q0,Due on [secure(%1)].,%#,DUE;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],Due date for job %0 set by %n.}
&CMD_JOB/SET here=$+job/set *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][and(isnum(%1),gt(%1,-1),lt(%1,7))][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That is an invalid setting. Job settings are from 0 to 6.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You set Job Number [secure(%0)] to [setq(1,switch(%1,0,ON HOLD,1,NEW,2,UNDERWAY,3,1/4 COMPLETE,4,1/2 COMPLETE,5,3/4 COMPLETE,COMPLETE))]%q1 status.;&STATUS %q0=[secure(%1)];@trigger #1430/TRIG_ADD=%q0,Set to %q1.,%#,STA;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Status set to %q1 on Job [secure(%0)].}
&CMD_JOB/TRANS here=$+job/trans *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][gt(match(get(#1430/BUCKETS),%1),0)][setq(1,extract(get(#1430/BUCKETS),match(get(#1430/BUCKETS),%1),1))][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=There is no type by that name. Valid types are [u(#1430/FN_PRETTY,get(#1430/BUCKETS))].},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have transferred the job from [get(%q0/BUCKET)] to %q1.;&BUCKET %q0=%q1;@trigger #1430/TRIG_ADD=%q0,Transferred to %q1.,%#,TRN;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 transferred to %q1.}
&CMD_JOB/DELETE here=$+job/delete *:@switch [or(u(#1430/DELETE_ACCESS,%#),hasflag(%#,WIZARD),switch(%#,#1430,1,0))][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have deleted job # %0.;&BUCKET %q0=GOING;@nuke %q0}
&CMD_JOBS/ALL here=$+jobs/*:@switch [u(#1430/HAS_ACCESS,%#)][ucstr(secure(first(%0)))]=0*,{@pemit %#=Permission denied.},1ALL,{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist filter(#1430/FIL_GOING,revwords(lcon(#1430)))=@pemit %#=[ifelse(u(#1430/FN_ACCESSCHECK,[get(##/BUCKET)],%#),u(#1430/DISPLAY_JOB,##),)];@wait me={@pemit %#=[repeat(=,79)]};@wait 0=@notify me},1PRI,{@@},1SEARCH,{@@},1COMPRESS,{@@},1MINE,{@@},1CREDITS,{@pemit %#=[center(| [ansi(hy,Anomaly Jobs)] |,79,=)]%r%rVersion: [u(#1430/VERSION)][space(5)]Release: [u(#1430/RELEASE)]%r%rAuthor: [u(#1430/CREDITS)]%r%r[u(#1430/LICENSE)]%r%r[repeat(=,79)]},{@switch [match(u(#1430/BUCKETS),secure(%0))]=0,{@pemit %#=That is not a valid job type. Valid job types are: [u(#1430/FN_PRETTY,u(#1430/BUCKETS))]},{@wait me=@pemit %#=[u(#1430/JOBS_HEADER)];@dolist revwords(lcon(#1430))={@pemit %#=[ifelse(and(u(#1430/FN_ACCESSCHECK,[get(##/BUCKET)],%#),switch(ucstr(secure(%0)),u(##/BUCKET),1,0)),u(#1430/DISPLAY_JOB,##),)]};@wait .1={@pemit %#=[repeat(=,79)]};@wait 0=@notify me}}
&CMD_JOB/ACT here=$+job/act *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][or(orflags(%#,WZ),u(#1430/ACCESS_[u(%q0/BUCKET)],%#))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name. Please type '+jobs/all' for all jobs or '+jobs/<type>' to list by type.},110*,{@pemit %#=You do not have access to that job.},{@pemit %#=[center(| [ansi(hy,View Job Number %0)] |,79,=)]%r[ulocal(#1430/DISPLAY_HEADERS,%q0)]%r[repeat(-,79)];@dolist lattr(%q0/COMMENT_*)={@pemit %#=[rest(convsecs(extract(get(%q0/##),2,1,|)))] [first(get(%q0/##),|)] [ljust(strtrunc(extract(get(%q0/##),4,1,|),15),15)] [ljust(strtrunc(last(get(%q0/##),|),35),35)]};@wait me={@pemit %#=[repeat(=,79)]};@notify me}
&CMD_JOB/MERGE here=$+job/merge *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %1,i))][setq(1,locate(#1430,Job %0,i))][isdbref(%q1)][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][u(#1430/FN_ACCESSCHECK,get(%q1/BUCKET),%#)][setq(2,u(%q0/NUM_COMMENT))][setq(3,u(%q1/NUM_COMMENT))][or(not(hasattr(%q0,LOCKED)),not(hasattr(%q1,LOCKED)))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job number %0.},110*,{@pemit %#=There is no job number %1.},1110*,{@pemit %#=You do not have access to [name(%q0)].},11110*,{@pemit %#=You do not have access to [name(%q1)].},11110*,{@pemit %#=One of the jobs is locked. It must be unlocked before modifications can be made.},{@trigger #1430/TRIG_ADD=%q0,Job [secure(%1)] merged into this one.,%#,MRG;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],Job %0 has been merged into Job %1 by %n;@wait me={@dolist [lattr(%q1/COMMENT_*)]={@cpattr %q1/##=%q0/COMMENT_[get(%q0/NUM_COMMENT)];&NUM_COMMENT %q0=[inc(get(%q0/NUM_COMMENT))]};@nuke %q1;&BUCKET %q1=GOING}};@notify me
&CMD_JOB/NAME here=$+job/name *=*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that name.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{@pemit %#=You have changed the name of Job %0 to %1.;&TITLE %q0=[secure(%1)];@trigger #1430/TRIG_ADD=%q0,Rename,%#,NAM;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],%n has renamed job %0.}
&CMD_JOB/ERROR here=$+job:@switch [u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=Type '+jobs' for a list of jobs, or '+job <#>' to view a specific job.}
&CMD_JOBS/ERROR here=$+jobs *:@switch [u(#1430/IS_STAFF,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=Type '+jobs' for a list of jobs, or '+job <#>' to view a specific job.}
&CMD_JOB/DUE2 here=$+job/due *=*/*/*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][setq(1,convtime(XXX [switch([rjust(%1,2,0)],01,Jan,02,Feb,03,Mar,04,Apr,05,May,06,Jun,07,Jul,08,Aug,09,Sep,10,Oct,11,Nov,12,Dec)] [rjust(%2,2,0)] 23:59:00 20[rjust(%3,2,0)]))][isdbref(%q0)][gt(%q1,0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is not a valid job number.},10*,{@pemit %#=Invalid date. Use date formatting as 'MM/DD/YY', '[rest(time())]', 'none' to clear.},{@pemit %#=You have set Job Number %0's date to [convsecs(%q1)].;&DUE_ON %q0=%q1;@trigger #1430/TRIG_ADD=%q0,Due on [convsecs(%q1)].,%#,DUE;@trigger #1430/TRIG_BROADCAST=[u(%q0/BUCKET)],Due date for job %0 set by %n.}
&CMD_JOBS/COMPRESS here=$+jobs/compress:@switch [hasflag(%#,WIZARD)]=0*,{@pemit %#=Permission denied.},{@dolist lnum(1,words(lcon(#1430)))={@name [extract(revwords(lcon(#1430)),##,1)]=Job ##};&JOBS_NUM #1430=[words(lcon(#1430))];@pemit %#=Compressed. The next job number will be [inc(get(#1430/JOBS_NUM))].}
&CMD_JOBS/MINE here=$+jobs/mine:@switch [u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist filter(#1430/FIL_MINE,revwords(lcon(#1430)))={@pemit %#=[u(#1430/DISPLAY_JOB,##)]};@wait me={@pemit %#=[center(| [ansi(hr,*)] Denotes New Activity |,79,=)]};@wait 0=@notify me}
&CMD_JOBS/PRI here=$+jobs/pri:@switch [u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{&JOBS_PRI #1430=[sortby(#1430/SORTBY_PRI,lcon(#1430))];@pemit %#=[u(#1430/JOBS_HEADER)];@dolist revwords(get(#1430/JOBS_PRI))={@pemit %#=[ifelse(and(u(#1430/FN_ACCESSCHECK,[get(##/BUCKET)],%#),u(#1430/FN_MONITORCHECK,get(##/BUCKET),%#)),u(#1430/DISPLAY_JOB,##),)]};@wait me={@pemit %#=[repeat(=,79)]};@wait 0=@notify me}
&CMD_JOB/CLONE here=$+job/clone *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no job by that number.},110*,{@pemit %#=You do not have access to that job.},{@pemit [setq(1,inc(get(#1430/JOBS_NUM)))]%#=Job copied as Job %q1.;&JOBS_NUM #1430=%q1;@clone %q0=Job %q1;@pemit me=[setq(2,num(Job %q1))];@tel %q2=#1430;@trigger #1430/TRIG_ADD=%q2,Cloned job.,%#,CLN;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 Cloned by %n.}
&CMD_JOBS/SEARCH here=$+jobs/search *:@switch [u(#1430/HAS_ACCESS,%#)]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(#1430/JOBS_HEADER)];@dolist revwords(lcon(#1430))={@pemit [setq(0,%b)]%#=ifelse(and(u(#1430/FN_ACCESSCHECK,get(##/BUCKET),%#),gt(words(grepi(##,*,%0)),0)),[u(#1430/DISPLAY_JOB,##)],)};@wait me={@pemit %#=[repeat(=,79)]};@wait 0=@notify me}
&CMD_JOB/LOCK here=$+job/lock *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is already locked.},{@pemit %#=You have locked job %0. No further modifications can be made to this job until it is unlocked.;&LOCKED %q0=1;@trigger #1430/TRIG_ADD=%q0,Locked by %n.,%#,LOK;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 locked by %n.}
&CMD_JOB/UNLOCK here=$+job/unlock *:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][isdbref(%q0)][u(#1430/FN_ACCESSCHECK,get(%q0/BUCKET),%#)][hasattr(%q0,LOCKED)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That is an invalid job number.},110*,{@pemit %#=You do not have access to that job.},1110*,{@pemit %#=That job is not locked.},{@pemit %#=You have unlocked job %0.;&LOCKED %q0=;@trigger #1430/TRIG_ADD=%q0,%1,%#,UNL;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 unlocked by %n.}
&CMD_JOB/EDIT here=$+job/edit */*=*/*:@switch [u(#1430/HAS_ACCESS,%#)][setq(0,locate(#1430,Job %0,i))][u(#1430/EDIT_ACCESS,%#)][isdbref(%q0)][setq(1,get(%q0/COMMENT_%1))][switch(first(%q1,|),ADD,1,CRE,1,0)][not(hasattr(%q0,LOCKED))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=Permission denied.},110*,{@pemit %#=That is an invalid job number.},1110*,{@pemit %#=You cannot modify that entry.},11110*,{@pemit %#=That job is locked. It must be unlocked before modifications can be made.},{&COMMENT_%1 %q0=[extract(%q1,1,4,|)]|[edit(last(%q1,|),%2,%3)];@pemit %#=Edited: [last(u(%q0/COMMENT_%1),|)];@trigger #1430/TRIG_ADD=%q0,%1 Edited by %n.,%#,EDT;@trigger #1430/TRIG_BROADCAST=[get(%q0/BUCKET)],Job %0 edited by %n.}
&CMD_BUCKETS here=$+buckets:@switch [u(#1430/IS_STAFF,%#]=0*,{@pemit %#=Permission denied.},{@pemit %#=[u(#1430/BUCKET_HEADER)];@pemit %#=[list(filter(#1430/FIL_ACCESS,get(#1430/BUCKETS)),[ljust(##,8)][ljust(strtrunc(first(get(#1430/BUCKET_##),|),54),54)][rjust(ifelse(u(#1430/FN_MONITORCHECK,##,%#),Monitoring,Ignoring),15)])];@pemit %#=[repeat(=,79)]}
&CMD_BUCKET/CREATE here=$+bucket/create *=*:@switch [hasflag(%#,WIZARD)][not(member(get(#1430/BUCKETS),ucstr(%0)))][not(gt(strlen(%0),5))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is already a bucket by that name.},110*,{@pemit %#=The name of a bucket is limited to five letters.},{@pemit %#=You have created a bucket named [ucstr(%0)]. If you wish to change the attribute restrictions, you must alter #1430/ACCESS_[ucstr(%0)] as it is currently set to allow access to all players who have access to +jobs.;&BUCKETS #1430=[setunion(get(#1430/BUCKETS),ucstr(%0))];&BUCKET_[ucstr(%0)] #1430=[secure(%1)];&ACCESS_[ucstr(%0)] #1430=1}
&CMD_BUCKET/DELETE here=$+bucket/delete *:@switch [hasflag(%#,WIZARD)][gt(member(get(#1430/BUCKETS),ucstr(%0)),0)][setq(0,ucstr(secure(%0)))][eq(words(filter(#1430/FIL_DELETE,lcon(#1430))),0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name.},110*,{@pemit %#=The bucket is not empty, and cannot be deleted.},{@pemit %#=You have removed the bucket named [ucstr(%0)].;&BUCKETS #1430=[remove(u(#1430/BUCKETS),ucstr(%0))];&BUCKET_[ucstr(%0)] #1430=;&HIDDEN_[ucstr(%0)] #1430=;&ACCESS_[ucstr(%0)] #1430=;@dolist search(type=player)={&JOBSH ##=[remove(get(##/JOBSH),ucstr(%0))];&JOBSB ##=[remove(get(##/JOBSB),ucstr(%0))]}}
&CMD_BUCKET/SHOW here=$+bucket/show *:@switch [orflags(%#,W)][not(hasattr(#1430,HIDDEN_%0))][member(get(#1430/BUCKETS),ucstr(%0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That bucket is not on the hidden list. Use '[ansi(h,+bucket/hide <bucket>)]' to put the bucket on the hidden list.},110*,{@pemit %#=There is no bucket by that name. Use '[ansi(h,+buckets)]' for a list of valid buckets.},{@pemit %#=You have removed bucket [ucstr(secure(%0))] from the list of hidden buckets. Jobs in this bucket will now show on the standard '[ansi(h,+jobs)]' list.;&HIDDEN_%0 #1430=}
&CMD_BUCKET/HIDE here=$+bucket/hide *:@switch [orflags(%#,W)][hasattr(#1430,HIDDEN_%0)][member(get(#1430/BUCKETS),ucstr(%0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=That bucket is already on the hidden list. Use '[ansi(h,+bucket/show <bucket>)]' to take the bucket off of the hidden list.},110*,{@pemit %#=There is no bucket by that name. Use '[ansi(h,+buckets)]' for a list of valid buckets.},{@pemit %#=You have placed bucket [ucstr(%0)] on the list of hidden buckets. Jobs in this bucket will not show on the standard '[ansi(h,+jobs)]' list.;&HIDDEN_%0 #1430=1}
&CMD_BUCKET/MONITOR here=$+bucket/monitor *:@switch [u(#1430/HAS_ACCESS,%#)][gt(member(get(#1430/BUCKETS),ucstr(%0)),0)][setq(0,ucstr(secure(%0)))][u(#1430/FN_ACCESSCHECK,%q0,%#)][u(#1430/FN_MONITORCHECK,%q0,%#)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name.},110*,{@pemit %#=You do not have access to that bucket.},1110*,{@pemit %#=You have added bucket %q0 to your monitored list.;&JOBSH %#=[ifelse(hasattr(#1430,HIDDEN_%q0),setunion(get(%#/JOBSH),%q0),remove(get(%#/JOBSH),%q0))]},{@pemit %#=You have removed bucket %q0 from your monitored list.;&JOBSH %#=[ifelse(hasattr(#1430,HIDDEN_%q0),remove(get(%#/JOBSH),%q0),setunion(get(%#/JOBSH),%q0))]}
&CMD_BUCKET/ACCESS here=$+bucket/access *=*:@switch [u(#1430/GIVE_ACCESS,%#)][setq(0,num(*%0))][setq(1,ucstr(secure(%1)))][isdbref(%q0)][gt(member(get(#1430/BUCKETS),%q1),0)][u(#1430/FN_ACCESSCHECK,%q1,%q0)]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no player by that name.},110*,{@pemit %#=There is no bucket by that name.},1110*,{@pemit %#=You have given [name(%q0)] access to the [ucstr(%1)] bucket.;&JOBSB %q0=[ifelse(member(get(%q0/JOBSB),%q1),remove(get(%q0/JOBSB),%q1),setunion(get(%q0/JOBSB),%q1))]},{@pemit %#=You have removed [name(%q0)]'s access to the [ucstr(%1)] bucket.;&JOBSB %q0=[ifelse(member(get(%q0/JOBSB),%q1),remove(get(%q0/JOBSB),%q1),setunion(get(%q0/JOBSB),%q1))]}
&CMD_BUCKET/POST here=$+bucket/post *=*:@switch [orflags(%#,W)][gt(member(get(#1430/BUCKETS),ucstr(%0)),0)][isnum(%1)][not(eq(%1,0))]=0*,{@pemit %#=Permission denied.},10*,{@pemit %#=There is no bucket by that name. Please use '[ansi(h,+buckets)]' to see a list of valid buckets.},110*,{@pemit %#=The post-to value must be an integer.},1110*,{@pemit %#=You have set bucket [ucstr(%0)] to post to the default board.;&POSTTO_%0 #1430=},{@pemit %#=You have set bucket [ucstr(%0)] to post to board %1. Please make sure that #895 has posting privileges to that board, and make sure the board exists. Set this to '0' to return it to default post status.;&POSTTO_%0 #1430=%1}
&CMD_PITCH here=$+pitch *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit %#=You have pitched the story idea to the roleplay staff about the '[secure(%0)]' storyline. Please remember that this is merely a story [ansi(hu,pitch)], and not a request. Staff, for one reason or many, may decide not to go with the idea.;@trigger #1430/TRIG_CREATE=%#,PITCH,1,[strtrunc(secure(%0),20)],%1}
&CMD_REQUEST here=$+request *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission denied.},{@pemit [setq(0,add(u(#1430/JOBS_NUM),1))]%#=You have requested [secure(strtrunc(%0,30))] from staff. Please allow for some time to process it. Do not page staff about it - you will hear back soon.;@trigger #895/TRIG_MAIL=%#,%0,%1;@trigger #1430/TRIG_CREATE=%#,REQ,2,[strtrunc(secure(%0),30)],[strtrunc(%1,get(#1430/BUFFER))],[add(secs(),172800)]}
&CMD_TYPO here=$+typo *:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission denied.},{@pemit [setq(0,add(get(#1430/JOBS_NUM),1))]%#=You have notified production staff of the typo, with the details '[strtrunc(%0,get(#1430/BUFFER))]';@trigger #1430/TRIG_CREATE=%#,BUILD,2,[strtrunc(%0,30)],[strtrunc(%1,get(#1430/BUFFER))]}
&CMD_BUG here=$+bug *=*:@switch [not(haspower(%#,guest))]=0*,{@pemit %#=Permission Denied.},{@pemit [setq(0,add(get(#1430/JOBS_NUM),1))]%#=You have notified production staff of the [secure(strtrunc(%0,30))] bug, with the details '[secure(strtrunc(%1,get(#1430/BUFFER)))]';@trigger #1430/TRIG_CREATE=%#,CODE,3,[strtrunc(%0,30)],[strtrunc(%1,get(#1430/BUFFER))]}
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting functions and data.
@startup here=@drain me;@notify me
@@
@@ -------------------------------------------------------
@@ There is a maximum number of jobs now as a security
@@ precaution. You can change this if you want it higher.
@@ -------------------------------------------------------
@@
&MAX_JOBS Job Database <JD>=200
@@
@@ -------------------------------------------------------
@@ This determines who can use the edit features of the
@@ system.
@@ -------------------------------------------------------
&EDIT_ACCESS Job Database <JD>=[orflags(%0,WZ)] 
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Setting triggers.
@@
&TRIG_APPROVE Job Tracker=+bbpost %vb/A: %3=[space(10)]%chJob:%cn #%0%r[space(8)]%chTitle:%cn [get(%q0/TITLE)]%r[space(4)]%chOpened By:%cn [name(get(%q0/OPENED_BY))]%r[space(4)]%chOpened On:%cn [convsecs(get(%q0/OPENED_ON))]%r%b%chCompleted By:%cn [name(%1)]%r%b%chCompleted On:%cn [time()]%r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2%r%rThis request was approved.;@mail/quick [get(%q0/OPENED_BY)]/Approved: %3=Your request for %3 has been approved: [last(get(%q0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%1)]:)] %2
&TRIG_DENY Job Tracker=+bbpost %vb/D: %3=[space(10)]%chJob:%cn #%0%r[space(8)]%chTitle:%cn [get(%q0/TITLE)]%r[space(4)]%chOpened By:%cn [name(get(%q0/OPENED_BY))]%r[space(4)]%chOpened On:%cn [convsecs(get(%q0/OPENED_ON))]%r%b%chCompleted By:%cn [name(%1)]%r%b%chCompleted On:%cn [time()]%r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2%r%rThis request was denied.;@mail/quick [get(%q0/OPENED_BY)]/Denied: %3=Your request for %3 has been denied: [last(get(%q0/COMMENT_1),|)]%r[repeat(-,75)]%r[ansi(h,Comments added by [name(%1)]:)] %2
&TRIG_COMPLETE Job Tracker=+bbpost [default(#1430/POSTTO_%3,%va)]/Completed Job #%0 %([get(%q0/TITLE)]%)=Job #%0 has been completed by [name(%1)]: %r%r[last(get(%q0/COMMENT_1),|)]%r[repeat(-,78)]%r[ansi(h,Comments from [name(%1)]:)] %2
&TRIG_CREATE Job Database <JD>=@switch gt(words(lcon(#1430)),u(#1430/MAX_JOBS))=1,{@pemit %0=[ansi(hr,JOBS ERROR:)] Creation failed. The +jobs system is full. Contact staff immediately.},{think [setq(0,inc(u(#1430/JOBS_NUM)))][setq(1,create(Job %q0,10))];@tel %q1=#1430;@link %q1=#1430;&OPENED_BY %q1=%0;&OPENED_ON %q1=[secs()];&MODIFIED_ON %q1=[secs()];&STATUS %q1=1;&TITLE %q1=%3;&BUCKET %q1=%1;&NUM_COMMENT %q1=2;&PRIORITY %q1=%2;&COMMENT_1 %q1=CRE|[secs()]|%0|[name(%0)]|[strtrunc(%4,get(#1430/BUFFER))];&ASSIGNED_TO %q1=%6;&JOBS_NUM #1430=%q0;@trig #1430/TRIG_BROADCAST=%1,New %1 job # %q0 submitted by [name(%0)]: %3}
@@
&VERSION Job Database <JD>=v4.0
&RELEASE Job Database <JD>=Feb 17, 2003
&CREDITS Report Database <RD>=Starfleet@Anomaly (station419@earthlink.net)
@@
@pemit %#=[ansi(hc,ANOMALY JOBS:)] Cleaning up attributes. You may see 'Created: Permission denied.' errors, these are normal.
@@
@fo me=@edit here/*=#1430,[num(Job Database <JD>)]
@fo me=@edit here/*=#895,[num(Job Tracker)]
@fo me=@edit Job Database <JD>/*=#1430,[num(Job Database <JD>)]
@fo me=@edit Job Tracker/*=#1430,[num(Job Database <JD>)]
@fo me=@edit Job Database <JD>/*=#895,[num(Job Tracker)]
@wait 2={@pemit %#=[ansi(hc,ANOMALY JOBS:)] Patch complete! Thanks for using Anomaly Jobs!;home;@set me=!quiet}
